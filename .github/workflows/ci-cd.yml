name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.24.3'
  JAVA_VERSION: '17'

jobs:
  # Static Analysis and Testing
  analyze_and_test:
    runs-on: ubuntu-latest
    name: Code Analysis & Testing
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: flutter analyze --fatal-infos

      - name: Run tests
        run: flutter test --coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: coverage/lcov.info
          name: codecov-umbrella
          fail_ci_if_error: false

  # Build Web Version
  build_web:
    runs-on: ubuntu-latest
    needs: analyze_and_test
    name: Build Web App
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build web app
        run: flutter build web --release --web-renderer html --dart-define=FLUTTER_WEB_USE_SKIA=false

      - name: Upload web build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web/
          retention-days: 7

  # Build Android APK
  build_android:
    runs-on: ubuntu-latest
    needs: analyze_and_test
    name: Build Android APK
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/*.apk
          retention-days: 30

  # Build Android App Bundle (AAB)
  build_android_bundle:
    runs-on: ubuntu-latest
    needs: analyze_and_test
    name: Build Android App Bundle
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build App Bundle
        run: flutter build appbundle --release

      - name: Upload App Bundle artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: build/app/outputs/bundle/release/*.aab
          retention-days: 30

  # Deploy to Firebase Hosting (Web) - DISABLED until Firebase service account is configured
  # deploy_web:
  #   runs-on: ubuntu-latest
  #   needs: [build_web]
  #   name: Deploy Web to Firebase
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Download web build artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: web-build
  #         path: build/web/

  #     - name: Deploy to Firebase Hosting
  #       uses: FirebaseExtended/action-hosting-deploy@v0
  #       with:
  #         repoToken: ${{ secrets.GITHUB_TOKEN }}
  #         firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PANEL_MONITOR_691C6 }}
  #         channelId: live
  #         projectId: panel-monitor-691c6

  # Create Release
  create_release:
    runs-on: ubuntu-latest
    needs: [build_android, build_android_bundle, build_web]
    name: Create Release
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}' | sed 's/+.*//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT

      - name: Download APK artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: ./apk/

      - name: Download AAB artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-aab
          path: ./aab/

      - name: Download web artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: ./web/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            ./apk/*.apk
            ./aab/*.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
