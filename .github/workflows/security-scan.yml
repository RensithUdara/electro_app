name: Security & Dependency Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scans weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.24.3'

jobs:
  dependency_scan:
    runs-on: ubuntu-latest
    name: Dependency Vulnerability Scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Check for outdated dependencies
        run: flutter pub outdated

      - name: Dart dependency scan
        run: dart pub deps

  security_scan:
    runs-on: ubuntu-latest
    name: Security Scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '0'  # Don't fail the workflow on vulnerabilities

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  code_quality:
    runs-on: ubuntu-latest
    name: Code Quality Analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Run static analysis
        run: flutter analyze --fatal-infos

      - name: Check code formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Run custom lints
        run: flutter analyze --fatal-warnings

  license_scan:
    runs-on: ubuntu-latest
    name: License Compliance Scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Generate license report
        run: |
          flutter pub deps --json > dependencies.json
          echo "## License Report" > license-report.md
          echo "Generated on $(date)" >> license-report.md
          echo "" >> license-report.md
          
      - name: Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: license-report.md
          retention-days: 30
